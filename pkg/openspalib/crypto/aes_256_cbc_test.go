package crypto

import (
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestAES256CBCEncrypterDecrypter(t *testing.T) {
	iv := []byte{0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90}
	key := []byte{0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xda, 0x39, 0xa3, 0xee, 0x5e,
		0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55}
	content := []byte("Hello SPA World!")

	assert.Len(t, iv, 16)
	assert.Len(t, key, 32)

	// Encrypt
	e := NewAES256CBCEncrypter(iv, key)
	cipher, err := e.Encrypt(content)
	assert.NoError(t, err)

	assert.Len(t, cipher, 32)
	cipherExpect := []byte{0x9B, 0x60, 0x3B, 0xFD, 0xD7, 0x5D, 0xC1, 0x14, 0x6D, 0x22, 0xB0, 0x44, 0xDA, 0x66, 0x97, 0x18,
		0xFD, 0xAD, 0xE8, 0x28, 0x1D, 0x61, 0xEF, 0xBD, 0xE0, 0x3E, 0x30, 0x5D, 0xE9, 0xA3, 0x9F, 0xEA}
	assert.Equal(t, cipherExpect, cipher)
	assert.False(t, strings.Contains(string(cipher), string(content)))

	// Decrypt
	d := NewAES256CBCDecrypter(iv, key)
	plain, err := d.Decrypt(cipher)
	assert.NoError(t, err)
	assert.Equal(t, content, plain)
}
