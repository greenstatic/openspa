# This workflow was based on spf13/cobra
# https://github.com/spf13/cobra/blob/22b617914c8890ba20db7ceafcdc2ef4ca4817d3/.github/workflows/test.yml

name: CI

on:
  push:
  pull_request:

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.0'

      - uses: actions/checkout@v3

      - uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: latest
          args: --verbose

  test-unix:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu
          - macOS
        go:
          - 18
          - 19
    name: '${{ matrix.platform }} | 1.${{ matrix.go }}.x'
    runs-on: ${{ matrix.platform }}-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.${{ matrix.go }}.x

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-1.${{ matrix.go }}.x-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-1.${{ matrix.go }}.x-

      - run: make bench
      - run: make test
      - run: make build

      # Inspired by: https://github.com/lluuiissoo/go-testcoverage
      - name: Quality Gate - Test coverage shall be above threshold
        env:
          TESTCOVERAGE_THRESHOLD: 70
        run: |
          echo "Quality Gate: checking test coverage is above threshold ..."
          echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
          totalCoverage=`make coverage | tail -n 1 | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Current test coverage : $totalCoverage %"
          if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
            echo "OK"
          else
            echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
            echo "Failed"
            exit 1
          fi

  test-win:
    name: MINGW64
    defaults:
      run:
        shell: msys2 {0}
    runs-on: windows-latest
    steps:
      - shell: bash
        run: git config --global core.autocrlf input

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >
            git
            make
            unzip
            mingw-w64-x86_64-go
            python3

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-${{ matrix.go }}-

      # Windows runners are too slow for running benchmarks, since it will kill the process for taking too long (11 min).
      # - run: make bench
      - run: make test
      - run: make build-windows_amd64
